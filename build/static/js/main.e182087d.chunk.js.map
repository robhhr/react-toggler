{"version":3,"sources":["components/Counter.js","index.js"],"names":["initialState","count","increase","type","decrease","reset","CounterContainer","connect","state","dispatch","bindActionCreators","className","onClick","reducer","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"iLAKMA,G,MAAe,CACnBC,MAAO,IAGHC,EAAW,iBAAO,CACtBC,KAAM,aAGFC,EAAW,iBAAO,CACtBD,KAAM,aAGFE,EAAQ,iBAAO,CACnBF,KAAM,UA0DFG,EAAmBC,aAfJ,SAAAC,GACnB,OAAOA,KAGe,SAAAC,GACtB,OAAOC,YACL,CACER,WACAE,WACAC,SAEFI,KAIqBF,EArCT,SAAC,GAAwC,IAAvCN,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAAUE,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAC3C,OACE,oCACE,yBAAKM,UAAU,QACb,wBAAIA,UAAU,SAAd,kBAEF,uBAAGA,UAAU,aAAb,4CACA,yBAAKA,UAAU,oBACb,2BAAIV,GACJ,yBAAKU,UAAU,WAEb,4BAAQC,QAASR,GAAjB,KAEA,4BAAQQ,QAASP,GAAjB,SAEA,4BAAQO,QAASV,GAAjB,WAyBKW,EA1DC,WAAmC,IAAlCL,EAAiC,uDAAzBR,EAAcc,EAAW,uCAChD,MAAoB,aAAhBA,EAAOX,KACF,CACLF,MAAOO,EAAMP,MAAQ,GAEE,aAAhBa,EAAOX,KACT,CACLF,MAAOO,EAAMP,MAAQ,GAEE,UAAhBa,EAAOX,KACT,CACLF,MAAO,GAIJO,GC7BHO,EAAQC,YAAYH,GAE1BI,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAACT,EAAD,OAEFa,SAASC,eAAe,U","file":"static/js/main.e182087d.chunk.js","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport './styles.css'\nimport {bindActionCreators} from 'redux'\n\nconst initialState = {\n  count: 0,\n}\n\nconst increase = () => ({\n  type: 'INCREASE',\n})\n\nconst decrease = () => ({\n  type: 'DECREASE',\n})\n\nconst reset = () => ({\n  type: 'RESET',\n})\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'INCREASE') {\n    return {\n      count: state.count + 1,\n    }\n  } else if (action.type === 'DECREASE') {\n    return {\n      count: state.count - 1,\n    }\n  } else if (action.type === 'RESET') {\n    return {\n      count: 0,\n    }\n  }\n\n  return state\n}\n\nconst Counter = ({count, increase, decrease, reset}) => {\n  return (\n    <>\n      <div className=\"card\">\n        <h1 className=\"title\">State counter</h1>\n      </div>\n      <p className=\"paragraph\">State counter built with React and Redux</p>\n      <div className=\"number-container\">\n        <p>{count}</p>\n        <div className=\"buttons\">\n          {/* decrease number */}\n          <button onClick={decrease}>-</button>\n          {/* reset counter */}\n          <button onClick={reset}>RESET</button>\n          {/* increase number */}\n          <button onClick={increase}>+</button>\n        </div>\n      </div>\n    </>\n  )\n}\n\nconst currentState = state => {\n  return state\n}\n\nconst propsToDispatch = dispatch => {\n  return bindActionCreators(\n    {\n      increase,\n      decrease,\n      reset,\n    },\n    dispatch,\n  )\n}\n\nconst CounterContainer = connect(currentState, propsToDispatch)(Counter)\n\nexport {CounterContainer}\nexport default reducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport reducer from './components/Counter'\nimport {CounterContainer} from './components'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <CounterContainer />\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}